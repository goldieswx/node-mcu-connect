
/*
    node-mcu-connect . node.js UDP Interface for embedded devices.
    Copyright (C) 2013-4 David Jakubowski

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>. 
*/


Master POV


Active Mode.

  MI (4B)  P,L,C,C (switches of SNCC) (0.125ms)
	
    dT (short) (0.5ms (low 0.1ms))  (slave prepares to receive bfr)

  MIBFR (64B typ) ID,ID,ID,Bfr,Bfr,Bfr,CS. (2ms)

    dT (long)  (1ms (low 0.25ms))  (slave execute cmd and store resp in bfr)
 
  MIRESP (64B == MIBFRsZ) 0,0,0,RESP(CS),RESP(CS),RESP(CS) (2ms)

       
  Either
  	- MI (4B)  P,L,C,C
        - MIRESEND (4B) P,0,C,C (cmd = mi_resend)
        - SNCC (4B) P,0,C,C (cmd=SNCC)
          

SNCC Mode

  -> SNCC (4B) P,0,C,C (cmd=SNCC) (0.125ms)

  -> Master goes to sleep (check MISO every < 1ms)

    Either  
     -> Slave brings MISO UP continuously (1ms+)
     -> Master wants go get out of SNCC mode


  -> MICHECK (P0CC cmd = mi_check) (0.125ms)

  -> dT (short) (0.5ms)

  -> MIUPID (4B) 0000(IN MOSI) vs IDMASK (OUT MOSI). 
  
  -> dT (short) (0.5ms)

    Either
      -> MIUPBFR (22,44,or 64B) 0,0,0,RESP(CS),RESP(CS),RESP(CS) (2ms) (gets response 	

and leave SNCC)
      -> MIUPBFRAM (same as MIUPBFR) but sets active mode just after. 
        After 10ms of master inactivity in Active mode, SNCC is implied.
      -> AM (P0CC cmd = mi_AM) just sets active mode.


/////////  

UPON SLAVE RESET, wait until a implicit SNCC happens.  
